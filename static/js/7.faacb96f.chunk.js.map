{"version":3,"sources":["views/home/home.tsx"],"names":["useStyles","makeStyles","theme","createStyles","container","margin","display","flexDirection","justifyContent","spacing","width","p","textAlign","initialError","checkCondition","status","message","name","roomId","accept","Home","React","setAccept","state","setState","dispatch","useConnection","error","setError","classes","navigate","useNavigate","handleChange","e","target","id","value","navigateTO","path","handleClick","type","includes","payload","length","Container","Grid","item","xs","FormControl","required","component","FormControlLabel","control","Checkbox","checked","onChange","color","label","FormHelperText","className","TextField","helperText","Button","variant","onClick"],"mappings":"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","file":"static/js/7.faacb96f.chunk.js","sourcesContent":["import * as React from \"react\"\nimport Container from \"@material-ui/core/Container\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\"\nimport { useConnection } from \"../../context/connection-conext\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport FormHelperText from \"@material-ui/core/FormHelperText\"\nimport { useNavigate } from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      margin: \"5 15% 0 15%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      \"& > *\": {\n        margin: theme.spacing(2),\n        width: \"80%\",\n      },\n    },\n    p: {\n      textAlign: \"center\",\n      margin: 0,\n    },\n  }),\n)\n\ninterface Props {}\nconst initialError = {\n  checkCondition: {\n    status: false,\n    message: \"\",\n  },\n  name: {\n    status: false,\n    message: \"\",\n  },\n  roomId: {\n    status: false,\n    message: \"\",\n  },\n  accept: {\n    status: false,\n    message: \"\",\n  },\n}\n\nconst Home: React.FC<Props> = () => {\n  const [accept, setAccept] = React.useState(false)\n  const [state, setState] = React.useState({\n    name: \"\",\n    roomId: \"\",\n  })\n  const { dispatch } = useConnection()\n  const [error, setError] = React.useState(initialError)\n  const classes = useStyles()\n  let navigate = useNavigate()\n\n  const handleChange = (e: any) => {\n    setState({\n      ...state,\n      [e.target.id]: e.target.value,\n    })\n  }\n\n  let navigateTO = (path: string) => {\n    navigate(path)\n  }\n  const handleClick = (type: string) => {\n    if (accept) {\n      if ([\"joinGlobalChat\", \"hostRoom\"].includes(type)) {\n        if (!state.name) {\n          setError({\n            ...initialError,\n            name: {\n              status: true,\n              message: \"Please Enter your Name\",\n            },\n          })\n        } else {\n          setError({\n            ...initialError,\n          })\n          dispatch({\n            type: \"set-up\",\n            payload: {\n              name: state.name,\n              type: type,\n              roomId: \"\",\n            },\n          })\n          dispatch({\n            type: \"connect\",\n            payload: {\n              dispatch: dispatch,\n              name: state.name,\n              type: type,\n              roomId: \"\",\n              navigateTO: navigateTO,\n            },\n          })\n        }\n      } else if (type === \"joinRoom\") {\n        if (!state.name) {\n          setError({\n            ...initialError,\n            name: {\n              status: true,\n              message: \"Please Enter your Name\",\n            },\n          })\n        } else if (state.roomId.length !== 12) {\n          setError({\n            ...initialError,\n            roomId: {\n              status: true,\n              message: \"Please Enter a Valid RoomID\",\n            },\n          })\n        } else {\n          setError({\n            ...initialError,\n          })\n          dispatch({\n            type: \"connect\",\n            payload: {\n              dispatch: dispatch,\n              name: state.name,\n              type: type,\n              roomId: state.roomId,\n              navigateTO: navigateTO,\n            },\n          })\n        }\n      }\n    } else {\n      setError({\n        ...initialError,\n        accept: {\n          status: true,\n          message: \"Please accept to proceed.\",\n        },\n      })\n    }\n  }\n  return (\n    <React.Fragment>\n      <Container>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <ul>\n              This is a platform to communicate with other person. Everyone participating in the\n              application is encoraged to abide by the following instructions:\n              <li>Donot use offensive word</li>\n            </ul>\n            <FormControl required error={error.accept.status} component=\"fieldset\">\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={accept}\n                    onChange={() => {\n                      setAccept(!accept)\n                    }}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Accept the tearms\"\n              />\n              <FormHelperText>{error.accept.message}</FormHelperText>\n            </FormControl>\n          </Grid>\n          <Grid item xs={6} spacing={2}>\n            <div className={classes.container}>\n              <TextField\n                id=\"name\"\n                label=\"Enter your Name\"\n                onChange={handleChange}\n                error={error.name.status}\n                helperText={error.name.message}\n              />\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  handleClick(\"joinGlobalChat\")\n                }}\n              >\n                Join Global chat\n              </Button>\n              <p className={classes.p}>OR</p>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  handleClick(\"hostRoom\")\n                }}\n              >\n                Host room\n              </Button>\n              <p className={classes.p}>OR</p>\n              <TextField\n                id=\"roomId\"\n                label=\"Enter Room Id to join\"\n                onChange={handleChange}\n                error={error.roomId.status}\n                helperText={error.roomId.message}\n              />\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={() => {\n                  handleClick(\"joinRoom\")\n                }}\n              >\n                Join Room\n              </Button>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}